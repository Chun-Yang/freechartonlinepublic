{"version":3,"sources":["labeledScale.linear.js","utils/getReactDataSheetDataFromData.js","utils/constants.js","ChartTypeSelector.js","utils/getChartDataFromData.js","ChartDisplay.js","DownloadButton.js","ShareButton.js","ChartOptionsToggle.js","ChartOptions.js","utils/currencyCodes.js","App.js","serviceWorker.js","index.js"],"names":["defaults","require","helpers","scaleService","Ticks","module","exports","Chart","defaultConfig","position","ticks","callback","formatters","linear","LinearScale","LinearScaleBase","extend","determineDataLimits","me","this","opts","options","chart","datasets","data","isHorizontal","IDMatches","meta","xAxisID","id","yAxisID","min","max","hasStacks","stacked","undefined","each","dataset","datasetIndex","getDatasetMeta","isDatasetVisible","stack","valuesPerStack","key","type","join","positiveValues","negativeValues","rawValue","index","value","getRightValue","isNaN","hidden","relativePoints","valuesForType","values","concat","minVal","maxVal","Math","isFinite","handleTickRangeOptions","getTickLimit","maxTicks","tickOpts","maxTicksLimit","ceil","width","tickFontSize","valueOrDefault","fontSize","global","defaultFontSize","height","handleDirectionalChanges","reverse","getLabelForIndex","getPixelForValue","start","rightValue","range","end","left","bottom","getValueForPixel","pixel","innerDimension","offset","getPixelForTick","ticksAsNumbers","registerScaleType","getReactDataSheetDataFromData","_data","Object","toArray","firstRow","rows","slice","rdsFirstRow","map","j","className","rdsRows","row","i","toConsumableArray","CHART_TYPES","DEFAULT_REAL_DATA","DEFAULT_PADDING_DATA","times","length","DEFAULT_DATA","MUI_THEME","createMuiTheme","palette","primary","main","contrastText","secondary","ChartTypeSelector","_ref","chartType","onChartTypeChange","react_default","a","createElement","c","Chip_default","label","startCase","color","onClick","COLOR_SOLID","COLOR_TRANSPARENT","getChartDataFromData","_ref2","_ref2$","seriesNames","validRows","filter","rawRow","labels","_unzip","unzip","_unzip2","rawDataSet","borderColor","backgroundColor","fill","_ref3","getChartOptions","chartTitleText","chartOptions","elements","line","tension","plugins","datalabels","display","align","anchor","title","text","advancedOptions","formatAsMoney","moneyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","formatter","format","set","showLabel","beginAtZero","autoSkip","mergeUserOptions","registerLabeledLinearScale","ChartDisplay","pluginService","register","ChartDataLabels","_this$props","props","redraw","selectedChartType","es","Component","DownloadButton","Button_default","variant","filename","link","document","download","href","getElementById","toDataURL","click","downloadImage","ShareButton","state","snackbarOpen","handleClick","_this","setState","el","window","location","body","appendChild","select","execCommand","removeChild","copyURLToClipboard","handleClose","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","IconButton_default","aria-label","ChartOptionsToggle","optionsOpen","onOptionsOpenChange","Switch_default","checked","onChange","OPTIONS_CONFIG","defaultValue","ChartOption","optionConfig","onValueChange","FormControl_default","TextField_default","e","num","parseFloat","target","Select_default","native","inputProps","name","option","ChartOptions","onOptionsChange","Grid_default","container","spacing","item","xs","objectSpread","defineProperty","App","initialState","nextState","serializable","version","hash","encodeURIComponent","JSON","stringify","_this2","styles","theme","md","src_ShareButton","src_ChartDisplay","src_ChartTypeSelector","setStateAndUrl","src_ChartOptionsToggle","src_ChartOptions","lib_default","valueRenderer","cell","onCellsChanged","changes","forEach","col","Link_default","Boolean","hostname","match","substr","parse","decodeURIComponent","_unused","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.880ca552.chunk.js","sourcesContent":["// NOTE: this is copied from node_modules/chart.js/src/scales/scale.linear.js\n// this replaces linear scale\n// change anchors:\n// CHANGE1\n\nvar defaults = require('chart.js/src/core/core.defaults');\nvar helpers = require('chart.js/src/helpers/index');\nvar scaleService = require('chart.js/src/core/core.scaleService');\nvar Ticks = require('chart.js/src/core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max + (me.max - me.min) * 0.1 : DEFAULT_MAX; // CHANGE1\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('labeledLinear', LinearScale, defaultConfig);\n};\n","export default function getReactDataSheetDataFromData(data) {\n  const [firstRow, ...rows] = data;\n  const rdsFirstRow = firstRow.map((value, j) => ({\n    value: value == null ? null : value,\n    className: j === 0 ? \"rds-chart-name read-only\" : \"read-only\"\n  }));\n  const rdsRows = rows.map((row, i) =>\n    row.map((value, j) => ({\n      value: value == null ? null : value,\n      className: j === 0 ? \"read-only\" : \"\"\n    }))\n  );\n  return [rdsFirstRow, ...rdsRows];\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport times from \"lodash.times\";\n\n// NOTE: we do not support all charts\n// const CHART_TYPES = Object.keys(Chart.controllers);\n// CHART_TYPES.sort((x, y) => x.localeCompare(y));\n// NOTE: different charts\n// - bubble (multiple sources, specific data format: {x, y, r})\n// - scatter (multiple sources, specific data format: {x, y})\n// - bar, horizontalBar, line, radar (multiple sources)\n// - polarArea, pie, doughnut (one source or multiple source)\nexport const CHART_TYPES = [\n  \"bar\",\n  // 'bubble', // format {x, y, r}\n  // 'doughnut', // legend on labels\n  \"horizontalBar\",\n  \"line\",\n  // 'pie', // legend on labels\n  // 'polarArea', // legend on labels\n  \"radar\"\n  // 'scatter', // format {x, y}\n];\n\nconst DEFAULT_COLS = 4;\nconst DEFAULT_ROWS = 42;\nconst DEFAULT_REAL_DATA = [\n  [\"Charts Created Last Week\", \"Alice\", \"Bob\", \"Carol\"],\n  [\"Monday\", 43, 70, 67],\n  [\"Tuesday\", 88, 65, 35],\n  [\"Wednesday\", 73, 10, 66],\n  [\"Thursday\", 14, 59, 85],\n  [\"Friday\", 50, 78, 66],\n  [\"Saturday\", 59, 92, 0],\n  [\"Sunday\", 83, 27, 27]\n];\nconst DEFAULT_PADDING_DATA = times(\n  DEFAULT_ROWS - DEFAULT_REAL_DATA.length,\n  () => times(DEFAULT_COLS, () => null)\n);\n\nexport const DEFAULT_DATA = DEFAULT_REAL_DATA.concat(DEFAULT_PADDING_DATA);\n\nexport const MUI_THEME = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#36a2eb\",\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: \"#ff6384\",\n      contrastText: '#ffffff'\n    }\n  }\n});\n","import React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport startCase from \"lodash.startcase\";\nimport { CHART_TYPES } from \"./utils/constants\";\n\nfunction ChartTypeSelector({ chartType, onChartTypeChange }) {\n  return (\n    <div className=\"chart-type-selector\">\n      {CHART_TYPES.map(c => (\n        <Chip\n          key={c}\n          label={startCase(c)}\n          color={c === chartType ? \"primary\" : \"default\"}\n          onClick={() => onChartTypeChange(c)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default ChartTypeSelector;\n","import unzip from \"lodash.unzip\";\n\nconst COLOR_SOLID = [\n  \"rgba(54,162,235)\", // blue\n  \"rgba(255,206,86)\", // yellow\n  \"rgba(255,99,132)\" // red\n];\n\nconst COLOR_TRANSPARENT = [\n  \"rgba(54,162,235, 0.5)\", // blue\n  \"rgba(255,206,86, 0.5)\", // yellow\n  \"rgba(255,99,132, 0.5)\" // red\n];\n\nexport default function getChartDataFromData(\n  [[chartName, ...seriesNames], ...rawRows],\n  chartType\n) {\n  const validRows = rawRows.filter(rawRow => rawRow[0]);\n  if (validRows.length === 0) {\n    return {\n      labels: [],\n      datasets: []\n    };\n  }\n\n  const [labels, ...rawDatasets] = unzip(validRows);\n  const datasets = rawDatasets\n    .map((rawDataSet, index) => {\n      const dataset = {\n        label: seriesNames[index],\n        data: rawDataSet\n      };\n      switch (chartType) {\n        case \"bar\":\n        case \"horizontalBar\":\n          dataset.borderColor = COLOR_SOLID[index];\n          dataset.backgroundColor = COLOR_SOLID[index];\n          break;\n        case \"line\":\n          dataset.borderColor = COLOR_SOLID[index];\n          dataset.backgroundColor = COLOR_SOLID[index];\n          dataset.fill = false;\n          break;\n        case \"radar\":\n          dataset.borderColor = COLOR_SOLID[index];\n          dataset.backgroundColor = COLOR_TRANSPARENT[index];\n          break;\n        default:\n          break;\n      }\n      return dataset;\n    })\n    // we do not show data on chart if there is no series name\n    .filter(({ label }) => label);\n\n  return {\n    labels,\n    datasets\n  };\n}\n","import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport ChartComponent from \"react-chartjs-2\";\nimport getChartDataFromData from \"./utils/getChartDataFromData\";\nimport registerLabeledLinearScale from \"./labeledScale.linear\";\nimport set from \"lodash.set\";\n\nregisterLabeledLinearScale(Chart);\n\nfunction mergeUserOptions(chartOptions, chartType, advancedOptions) {\n  if (advancedOptions.formatAsMoney) {\n    const moneyFormatter = new Intl.NumberFormat([], {\n      style: \"currency\",\n      currency: advancedOptions.formatAsMoney,\n      minimumFractionDigits: 0\n    });\n    const formatter = value => moneyFormatter.format(value);\n    if (chartType === \"radar\") {\n      set(chartOptions, \"scale.ticks.callback\", formatter);\n    } else {\n      if (chartType === \"horizontalBar\") {\n        set(chartOptions, \"scales.xAxes.0.ticks.callback\", formatter);\n      } else {\n        set(chartOptions, \"scales.yAxes.0.ticks.callback\", formatter);\n      }\n      set(chartOptions, \"plugins.datalabels.formatter\", formatter);\n    }\n  }\n\n  if (advancedOptions.showLabel === false) {\n    chartOptions.plugins.datalabels.display = false;\n  } else {\n    if (chartType === \"bar\" || chartType === \"line\") {\n      set(chartOptions, \"scales.yAxes.0.type\", \"labeledLinear\");\n    } else if (chartType === \"horizontalBar\") {\n      set(chartOptions, \"scales.xAxes.0.type\", \"labeledLinear\");\n    }\n  }\n\n  const beginAtZero = advancedOptions.beginAtZero !== false;\n  if (chartType === \"radar\") {\n    set(chartOptions, \"scale.ticks.beginAtZero\", beginAtZero);\n  } else {\n    set(chartOptions, \"scales.xAxes.0.ticks.beginAtZero\", beginAtZero);\n    set(chartOptions, \"scales.yAxes.0.ticks.beginAtZero\", beginAtZero);\n  }\n\n  if (advancedOptions.min != null) {\n    if (chartType === \"radar\") {\n      set(chartOptions, \"scale.ticks.min\", advancedOptions.min);\n    } else {\n      set(chartOptions, \"scales.xAxes.0.ticks.min\", advancedOptions.min);\n      set(chartOptions, \"scales.yAxes.0.ticks.min\", advancedOptions.min);\n    }\n  }\n\n  if (advancedOptions.max != null) {\n    if (chartType === \"radar\") {\n      set(chartOptions, \"scale.ticks.max\", advancedOptions.max);\n    } else {\n      set(chartOptions, \"scales.xAxes.0.ticks.max\", advancedOptions.max);\n      set(chartOptions, \"scales.yAxes.0.ticks.max\", advancedOptions.max);\n    }\n  }\n\n  if (advancedOptions.autoSkip === false) {\n    if (chartType !== \"radar\") {\n      set(chartOptions, \"scales.xAxes.0.ticks.autoSkip\", false);\n      set(chartOptions, \"scales.yAxes.0.ticks.autoSkip\", false);\n    }\n  }\n\n  return chartOptions;\n}\n\nfunction getChartOptions({ chartTitleText, chartType, options }) {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0\n      }\n    },\n    plugins: {\n      datalabels: {\n        display: chartType !== \"radar\",\n        align: \"end\",\n        anchor: \"end\"\n      }\n    }\n  };\n\n  if (chartTitleText) {\n    chartOptions.title = {\n      display: true,\n      text: chartTitleText,\n      position: \"bottom\"\n    };\n  }\n\n  return mergeUserOptions(chartOptions, chartType, options);\n}\n\nclass ChartDisplay extends Component {\n  componentDidMount() {\n    Chart.pluginService.register(ChartDataLabels);\n  }\n\n  render() {\n    const {\n      redraw,\n      data,\n      selectedChartType,\n      chartTitleText,\n      options\n    } = this.props;\n    return (\n      <ChartComponent\n        id=\"chart\"\n        redraw={redraw}\n        data={getChartDataFromData(data, selectedChartType)}\n        type={selectedChartType}\n        options={getChartOptions({\n          chartTitleText,\n          chartType: selectedChartType,\n          options\n        })}\n      />\n    );\n  }\n}\n\nexport default ChartDisplay;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function DownloadButton({ chartTitleText }) {\n  return (\n    <div className=\"download-btn-wrapper\">\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\"download-btn\"\n        onClick={() => downloadImage(chartTitleText)}\n      >\n        DOWNLOAD IMAGE\n      </Button>\n    </div>\n  );\n}\n\nfunction downloadImage(filename) {\n  const link = document.createElement(\"a\");\n  link.download = `${filename}.png`;\n  link.href = document.getElementById(\"chart\").toDataURL();\n  link.click();\n}\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nclass ShareButton extends Component {\n  state = {\n    snackbarOpen: false\n  };\n  handleClick = () => {\n    this.setState({ snackbarOpen: true });\n    copyURLToClipboard();\n  };\n  handleClose = () => {\n    this.setState({ snackbarOpen: false });\n  };\n  render() {\n    return (\n      <div className=\"download-btn-wrapper\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"download-btn\"\n          onClick={this.handleClick}\n        >\n          SHARE LINK\n        </Button>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={this.state.snackbarOpen}\n          autoHideDuration={3000}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"copy-success\"\n          }}\n          message={<span id=\"copy-success\">COPIED TO CLIPBOARD</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose}\n            >\n              x\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nfunction copyURLToClipboard() {\n  const el = document.createElement(\"textarea\");\n  el.value = window.location.href;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n}\n\nexport default ShareButton;\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\n\nfunction ChartOptionsToggle({ optionsOpen, onOptionsOpenChange }) {\n  return (\n    <div className=\"options-toggle-wrapper\">\n      <span>\n        ADVANCED OPTIONS\n      </span>\n      <Switch\n        checked={optionsOpen}\n        onChange={() => onOptionsOpenChange(!optionsOpen)}\n        color=\"primary\"\n      />\n    </div>\n  );\n}\n\nexport default ChartOptionsToggle;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport startCase from \"lodash.startcase\";\nimport CURRENCY_CODES from \"./utils/currencyCodes\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst OPTIONS_CONFIG = [\n  {\n    type: \"select\",\n    key: \"formatAsMoney\",\n    options: [\"\", ...CURRENCY_CODES]\n  },\n  {\n    type: \"switch\",\n    key: \"showLabel\",\n    defaultValue: true\n  },\n  {\n    type: \"switch\",\n    key: \"beginAtZero\",\n    defaultValue: true\n  },\n  {\n    type: \"switch\",\n    key: \"autoSkip\",\n    label: \"Skip Rows When Too Many\",\n    defaultValue: true\n  },\n  {\n    type: \"number\",\n    key: \"min\"\n  },\n  {\n    type: \"number\",\n    key: \"max\"\n  }\n];\n\nfunction ChartOptions({ options, onOptionsChange }) {\n  return (\n    <div className=\"chart-options\">\n      <hr />\n      {OPTIONS_CONFIG.map(optionConfig => (\n        <Grid container spacing={24} key={optionConfig.key}>\n          <Grid item xs={6} className=\"chart-option-label\">\n            {optionConfig.label || startCase(optionConfig.key)}\n          </Grid>\n          <Grid item xs={6} className=\"chart-option-input\">\n            <ChartOption\n              optionConfig={optionConfig}\n              value={options[optionConfig.key]}\n              onValueChange={value =>\n                onOptionsChange({ ...options, [optionConfig.key]: value })\n              }\n            />\n          </Grid>\n        </Grid>\n      ))}\n    </div>\n  );\n}\n\nfunction ChartOption({ optionConfig, value, onValueChange }) {\n  switch (optionConfig.type) {\n    case \"number\":\n      return (\n        <FormControl>\n          <TextField\n            value={value == null ? '' : value}\n            onChange={e => {\n              const num = parseFloat(e.target.value);\n              onValueChange(isNaN(num) ? undefined : num);\n            }}\n            type=\"number\"\n          />\n        </FormControl>\n      );\n    case \"select\":\n      return (\n        <FormControl>\n          <Select\n            native\n            value={value}\n            onChange={e => onValueChange(e.target.value)}\n            inputProps={{\n              name: optionConfig.key,\n              id: optionConfig.key\n            }}\n          >\n            {optionConfig.options.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    case \"switch\":\n      return (\n        <FormControl>\n          <Switch\n            color=\"primary\"\n            checked={value == null ? optionConfig.defaultValue : value}\n            onChange={e => onValueChange(e.target.checked)}\n          />\n        </FormControl>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default ChartOptions;\n","export default [\"EUR\", \"GBP\", \"USD\"];\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport ReactDataSheet from \"react-datasheet\";\nimport \"react-datasheet/lib/react-datasheet.css\";\nimport \"./App.css\";\nimport getReactDataSheetDataFromData from \"./utils/getReactDataSheetDataFromData\";\nimport { CHART_TYPES, DEFAULT_DATA, MUI_THEME } from \"./utils/constants\";\nimport ChartTypeSelector from \"./ChartTypeSelector\";\nimport ChartDisplay from \"./ChartDisplay\";\nimport DownloadButton from \"./DownloadButton\";\nimport ShareButton from \"./ShareButton\";\nimport ChartOptionsToggle from \"./ChartOptionsToggle\";\nimport ChartOptions from \"./ChartOptions\";\n\nconst VERSION = 1;\n\nclass App extends Component {\n  state = {\n    selectedChartType:\n      this.props.initialState.selectedChartType || CHART_TYPES[0],\n    data: this.props.initialState.data || DEFAULT_DATA,\n    options: this.props.initialState.options || {},\n    optionsOpen: this.props.initialState.optionsOpen || false,\n    redraw: false\n  };\n\n  setStateAndUrl(nextState) {\n    this.setState(nextState);\n    const serializable = { version: VERSION, ...this.state, ...nextState };\n    delete serializable.redraw;\n    window.location.hash = encodeURIComponent(JSON.stringify(serializable));\n  }\n\n  render() {\n    const chartTitleText = this.state.data[0][0];\n    return (\n      <div id=\"App\">\n        <Grid container spacing={24}>\n          <MuiThemeProvider theme={MUI_THEME}>\n            <Grid item xs={12} md={6}>\n              <div className=\"save-buttons\">\n                <DownloadButton chartTitleText={chartTitleText} />\n                <ShareButton />\n              </div>\n              <ChartDisplay\n                redraw={this.state.redraw}\n                data={this.state.data}\n                selectedChartType={this.state.selectedChartType}\n                chartTitleText={chartTitleText}\n                options={this.state.options}\n              />\n              <ChartTypeSelector\n                chartType={this.state.selectedChartType}\n                onChartTypeChange={selectedChartType => {\n                  this.setStateAndUrl({ selectedChartType, redraw: true });\n                }}\n              />\n              <ChartOptionsToggle\n                optionsOpen={this.state.optionsOpen}\n                onOptionsOpenChange={optionsOpen =>\n                  this.setStateAndUrl({ optionsOpen, redraw: false })\n                }\n              />\n              {this.state.optionsOpen && (\n                <ChartOptions\n                  options={this.state.options}\n                  onOptionsChange={options =>\n                    this.setStateAndUrl({ options, redraw: true })\n                  }\n                />\n              )}\n            </Grid>\n          </MuiThemeProvider>\n          <Grid item xs={12} md={6}>\n            <ReactDataSheet\n              data={getReactDataSheetDataFromData(this.state.data)}\n              valueRenderer={cell => cell.value}\n              onCellsChanged={changes => {\n                const data = this.state.data.map(row => [...row]);\n                changes.forEach(({ cell, row, col, value }) => {\n                  data[row][col] = value;\n                });\n                this.setStateAndUrl({ data, redraw: false });\n              }}\n            />\n          </Grid>\n        </Grid>\n        <div className=\"feedback-link-wrapper\">\n          <Link href=\"mailto:feedback@freechartonline.com\" target=\"_blank\">\n            feedback@freechartonline.com\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst VERSION = 1;\n\nconst hash = window.location.hash.substr(1);\nlet initialState;\ntry {\n  initialState = JSON.parse(decodeURIComponent(hash));\n} catch {\n  initialState = { version: VERSION };\n}\n\nif (initialState.version === 1) {\n  ReactDOM.render(\n    <App initialState={initialState} />,\n    document.getElementById(\"root\")\n  );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}